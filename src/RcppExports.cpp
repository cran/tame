// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_sum_of_minima_triangle
NumericMatrix rcpp_sum_of_minima_triangle(int n, NumericVector index, NumericMatrix inner_terms);
RcppExport SEXP _tame_rcpp_sum_of_minima_triangle(SEXP nSEXP, SEXP indexSEXP, SEXP inner_termsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type index(indexSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inner_terms(inner_termsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sum_of_minima_triangle(n, index, inner_terms));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_sum_of_minima_full
NumericMatrix rcpp_sum_of_minima_full(int n, int m, NumericVector row_index, NumericVector col_index, NumericMatrix inner_terms);
RcppExport SEXP _tame_rcpp_sum_of_minima_full(SEXP nSEXP, SEXP mSEXP, SEXP row_indexSEXP, SEXP col_indexSEXP, SEXP inner_termsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type row_index(row_indexSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type col_index(col_indexSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inner_terms(inner_termsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_sum_of_minima_full(n, m, row_index, col_index, inner_terms));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_double_sum_triangle
NumericMatrix rcpp_double_sum_triangle(int n, NumericVector index, NumericMatrix inner_terms);
RcppExport SEXP _tame_rcpp_double_sum_triangle(SEXP nSEXP, SEXP indexSEXP, SEXP inner_termsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type index(indexSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inner_terms(inner_termsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_double_sum_triangle(n, index, inner_terms));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_double_sum_full
NumericMatrix rcpp_double_sum_full(int n, int m, NumericVector row_index, NumericVector col_index, NumericMatrix inner_terms);
RcppExport SEXP _tame_rcpp_double_sum_full(SEXP nSEXP, SEXP mSEXP, SEXP row_indexSEXP, SEXP col_indexSEXP, SEXP inner_termsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type row_index(row_indexSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type col_index(col_indexSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inner_terms(inner_termsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_double_sum_full(n, m, row_index, col_index, inner_terms));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tame_rcpp_sum_of_minima_triangle", (DL_FUNC) &_tame_rcpp_sum_of_minima_triangle, 3},
    {"_tame_rcpp_sum_of_minima_full", (DL_FUNC) &_tame_rcpp_sum_of_minima_full, 5},
    {"_tame_rcpp_double_sum_triangle", (DL_FUNC) &_tame_rcpp_double_sum_triangle, 3},
    {"_tame_rcpp_double_sum_full", (DL_FUNC) &_tame_rcpp_double_sum_full, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_tame(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
